node {
    def built_img = ''
    stage('Checkout git repo') {
      git branch: 'main', url: params.git_repo
    }
    stage('Build and push Docker image') {
      withCredentials([string(credentialsId: 'mydockerpwd', variable: 'mydockercredp')]) {
      sh(script: "docker login -u ${acr_username} -p ${mydockercredp}", returnStdout: true)
      //${registry_url}//${acr_password}
        }
      //sh(script: "docker build -t ${registry_url}/jenkins-k8s-slave:latest -f cicd/jenkinsslave.docker .", returnStdout: true)
      sh(script: "docker build -t ${registry_url}/customersapi:${BUILD_NUMBER} -f src/CustomersAPI/Dockerfile .", returnStdout: true)
      sh(script: "docker build -t ${registry_url}/customersmvc:${BUILD_NUMBER} -f src/CustomersMVC/Dockerfile .", returnStdout: true)
      sh(script: "docker push ${registry_url}/customersapi:${BUILD_NUMBER}", returnStdout: true)
      sh(script: "docker push ${registry_url}/customersmvc:${BUILD_NUMBER}", returnStdout: true)

      //sh(script: "docker push ${registry_url}/jenkins-k8s-slave:latest", returnStdout: true)
    }
    stage('Unit Tests') {
      sh 'echo test'
    }
    stage('Browser Tests'){
        parallel(
            "Edge":{sh 'echo test'},
            "Firefox":{sh 'echo test'},
            "Chrome":{sh 'echo test'}
            )
    }
    stage('Deploy into k8s') {
      kubeconfig(credentialsId: 'MyKubecfg', serverUrl: '') {
      sh(script: "cat cicd/k8s.yaml | sed -e 's/build_number/${BUILD_NUMBER}/g' -e 's/YourACRName/${acr_username}/g' | kubectl apply -f -", returnStdout: true)
      //sh(script: "cat cicd/k9s.yaml | kubectl apply -f -", returnStdout: true)
      }
    }
}